{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/core/KeyParser.js","webpack:///./src/core/StateAccessor.js","webpack:///./src/core/ConfigurationContainer.js","webpack:///./src/core/State.js","webpack:///./src/core/Configuration.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","keyValidator","RegExp","split","result","test","lastIndex","StateAccessor","container","this","set","ConfigurationContainer","configuration","has","keys","index","currentIndex","length","search","setRecursive","State","stateAccessor","parseInt","parseFloat","func","defaultValue","e","Configuration","keyParser","isString","isValid","parts","some","validateKey","parse","validateKeyParts","accessor"],"mappings":"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","file":"configuration.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const keyValidator = new RegExp(/^[a-zA-Z0-9:_]+$/g);\r\n\r\n/**\r\n * Предоставляет доступ к методам для работы с ключом.\r\n * */\r\nclass KeyParser\r\n{\r\n    /**\r\n     * Разбирает ключ и возвращает его по частям\r\n     * @param {string} key\r\n     * @returns {Array<string>}\r\n     */\r\n    parse(key)\r\n    {\r\n        return key.split(\":\");\r\n    }\r\n\r\n    /**\r\n     * Вернет true, если предоставленный ключ является строкой\r\n     * @param {string} key\r\n     * @returns {boolean}\r\n     */\r\n    isString(key)\r\n    {\r\n        return typeof key == \"string\";\r\n    }\r\n\r\n    /**\r\n     * Вернет true, если предоставленный ключ не имеет запрещенных символов\r\n     * @param {string} key\r\n     * @returns {boolean}\r\n     */\r\n    isValid(key)\r\n    {\r\n        let result = keyValidator.test(key);\r\n\r\n        keyValidator.lastIndex = 0;\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nexport default new KeyParser();","import ConfigurationContainer from \"./ConfigurationContainer\";\r\n\r\n/** Предоставляет доступ к значению */\r\nexport default class StateAccessor\r\n{\r\n    /**\r\n     * \r\n     * @param {ConfigurationContainer} container\r\n     * @param {string} key\r\n     */\r\n    constructor(container, key)\r\n    {\r\n        this.container = container;\r\n        this.key = key;\r\n    }\r\n\r\n    /** \r\n     * Возвращает значение\r\n     * @returns {any}\r\n     */\r\n    get value()\r\n    {\r\n        return this.container.get(this.key);\r\n    }\r\n\r\n    /**\r\n     * Устанавливает значение\r\n     * @param {any} value\r\n     */\r\n    set value(value)\r\n    {\r\n        this.container.set(this.key, value);\r\n    }\r\n}","import Configuration from \"./Configuration\";\r\nimport StateAccessor from \"./StateAccessor\";\r\n\r\n/** Предоставляет доступ к управлению данными в контейнере */\r\nexport default class ConfigurationContainer\r\n{\r\n    #_values = {};\r\n    #_configuration;\r\n\r\n    constructor(configuration)\r\n    {\r\n        this.#_configuration = configuration;\r\n    }\r\n\r\n    /** \r\n     * Возвращает объект конфигурации, к которому принадлежит контейнер.\r\n     * @returns {Configuration}\r\n     */\r\n    get configuration()\r\n    {\r\n        return this.#_configuration;\r\n    }\r\n\r\n    /**\r\n     * Получение значения по ключу.\r\n     * @param {string} key\r\n     */\r\n    get(key)\r\n    {\r\n        if (!this.has(key)) return null;\r\n        return this.#_values[key];\r\n    }\r\n\r\n    /**\r\n     * Получение значения по массиву ключей (пути).\r\n     * @param {Array<string>} keys\r\n     * @param {number} index\r\n     */\r\n    search(keys, index = 0)\r\n    {\r\n        for (let currentIndex = index; currentIndex < keys.length; currentIndex++)\r\n        {\r\n            let key = keys[currentIndex];\r\n\r\n            // Ключ не найден\r\n            if (!this.has(key)) break;\r\n\r\n            // Далее идет контейнер, можно продолжать получать данные\r\n            if (this.#_values[key] instanceof ConfigurationContainer)\r\n            {\r\n                return this.#_values[key].search(keys, ++index);\r\n            }\r\n\r\n            // Не дало результатов\r\n            if (index < keys.length - 1)\r\n            {\r\n                return null;\r\n            }\r\n            \r\n            // Достигнут конец пути\r\n            return new StateAccessor(this, key);\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Устанавливает значение по ключу.\r\n     * @param {string} key\r\n     * @param {any} value\r\n     */\r\n    set(key, value)\r\n    {\r\n        this.#_values[key] = value;\r\n    }\r\n\r\n    /**\r\n     * Устанавливает значение по массиву ключей (пути).\r\n     * @param {Array<string>} keys\r\n     * @param {any} value\r\n     * @param {number} index\r\n     */\r\n    setRecursive(keys, value, index = 0)\r\n    {\r\n        for (let currentIndex = index; currentIndex < keys.length; currentIndex++)\r\n        {\r\n            let key = keys[currentIndex];\r\n\r\n            // Достигнут конец пути\r\n            if (currentIndex >= keys.length - 1)\r\n            {\r\n                this.#_values[key] = value;\r\n                return true;\r\n            }\r\n\r\n            // Ключ не найден\r\n            if (!this.has(key))\r\n            {\r\n                this.#_values[key] = new ConfigurationContainer(this.#_configuration);\r\n            }\r\n\r\n            // Не контейнер\r\n            else if (!(this.#_values[key] instanceof ConfigurationContainer))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            // Продолжаем\r\n            return this.#_values[key].setRecursive(keys, value, ++index);\r\n\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Вернет true, если ключ существует в контейнере.\r\n     * @param {string} key\r\n     */\r\n    has(key)\r\n    {\r\n        return this.#_values.hasOwnProperty(key);\r\n    }\r\n\r\n    /**\r\n     * Удаляет значение по ключу.\r\n     * @param {string} key\r\n     */\r\n    delete(key)\r\n    {\r\n        if (!this.has(key)) return false;\r\n        return delete this.#_values[key];\r\n    }\r\n}","import StateAccessor from \"./StateAccessor\";\r\n\r\n/** Предоставляет доступ к управлению состоянием значения */\r\nexport default class State\r\n{\r\n    /** @type {StateAccessor} */\r\n    #_stateAccessor;\r\n\r\n    /**\r\n     * Стандартный конструктор.\r\n     * @param {StateAccessor} stateAccessor\r\n     */\r\n    constructor(stateAccessor)\r\n    {\r\n        this.#_stateAccessor = stateAccessor;\r\n    }\r\n\r\n    /**\r\n     * Возвращает значение\r\n     * @returns {any}\r\n     */\r\n    get value()\r\n    {\r\n        return this.#_stateAccessor.value;\r\n    }\r\n\r\n    /**\r\n     * Устанавливает значение\r\n     * @param {any} value\r\n     */\r\n    set value(value)\r\n    {\r\n        this.#_stateAccessor.value = value;\r\n    }\r\n\r\n    /**\r\n     * Возвращает ключ значения в контейнере\r\n     * @returns {any}\r\n     */\r\n    get key()\r\n    {\r\n        return this.#_stateAccessor.key;\r\n    }\r\n\r\n    /**\r\n     * Возвращает значение типа Boolean\r\n     * @returns {bool}\r\n     */\r\n    get asBoolean()\r\n    {\r\n        let value = this.value;\r\n\r\n        if (typeof value == \"boolean\") return value;\r\n        if (typeof value == \"number\") return value == 1;\r\n\r\n        return !!value;\r\n    }\r\n\r\n    /**\r\n     * Возвращает значение типа Number\r\n     * @returns {bool}\r\n     */\r\n    get asInteger()\r\n    {\r\n        let value = this.value;\r\n        return this.#executeForValue(value, parseInt, 0);\r\n    }\r\n\r\n    /**\r\n     * Возвращает значение типа Number\r\n     * @returns {bool}\r\n     */\r\n    get asFloat()\r\n    {\r\n        let value = this.value;\r\n        return typeof value == \"number\" ? value : this.#executeForValue(value, parseFloat, 0);\r\n    }\r\n\r\n    #executeForValue(value, func, defaultValue)\r\n    {\r\n        try\r\n        {\r\n            return func(value);\r\n        }\r\n        catch (e)\r\n        {\r\n            return defaultValue;\r\n        }\r\n    }\r\n}","import keyParser from \"./KeyParser\"\r\nimport ConfigurationContainer from \"./ConfigurationContainer\";\r\nimport State from \"./State\";\r\n\r\n/** Предоставляет доступ к управлению и изменению конфигураций */\r\nexport default class Configuration\r\n{\r\n    #_container;\r\n\r\n    constructor()\r\n    {\r\n        this.#_container = new ConfigurationContainer(this);\r\n    }\r\n\r\n    /**\r\n     * Устанавливает значение по ключу.\r\n     * Например, можно установить ключ log:enabled и значение true.\r\n     * @param {string} key\r\n     * @param {any} value\r\n     */\r\n    set(key, value)\r\n    {\r\n        Configuration.validateKey(key);\r\n\r\n        let parts = keyParser.parse(key);\r\n\r\n        Configuration.validateKeyParts(parts);\r\n\r\n        /** @type {ConfigurationContainer} */\r\n        let container = this.#_container;\r\n\r\n        return container.setRecursive(parts, value);\r\n    }\r\n\r\n    /**\r\n     * Получение значение по ключу.\r\n     * @param {any} key\r\n     */\r\n    get(key)\r\n    {\r\n        Configuration.validateKey(key);\r\n\r\n        let parts = keyParser.parse(key);\r\n\r\n        Configuration.validateKeyParts(parts);\r\n\r\n        /** @type {ConfigurationContainer} */\r\n        let container = this.#_container;\r\n        \r\n        let accessor = container.search(parts);\r\n        return !accessor ? null : new State(accessor);\r\n    }\r\n\r\n    /**\r\n     * Проверяет ключ на удовлетворение всем условиям ключа.\r\n     * @param {string} key\r\n     */\r\n    static validateKey(key)\r\n    {\r\n        if (!keyParser.isString(key)) throw \"Key must be a string type\";\r\n        if (!keyParser.isValid(key)) throw \"Key is invalid\";\r\n    }\r\n\r\n    /**\r\n    * Проверяет предоставленные части пути.\r\n    * @param {Array<string>} parts\r\n    */\r\n    static validateKeyParts(parts)\r\n    {\r\n        if (parts.some(key => key === \"\")) throw \"At least one key is empty\";\r\n    }\r\n\r\n    static create()\r\n    {\r\n        return new Configuration();\r\n    }\r\n}","import Configuration from \"./core/Configuration\"\r\nexport { Configuration };"],"sourceRoot":""}